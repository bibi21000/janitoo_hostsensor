==========================
Using the docker appliance
==========================


Installing Docker
=================

Install docker using the following documentation https://docs.docker.com/engine/installation/


Initial installation
====================

Pull the image :

.. code:: bash

    docker pull bibi21000/janitoo_hostsensor

Create a 'store' container  :

.. code:: bash

    docker create -v /root/.ssh/ -v /opt/janitoo/etc/ --name hostsensor_store bibi21000/janitoo_hostsensor /bin/true

Create a 'running' container :

.. code:: bash

    docker create --volumes-from hostsensor_store -p 8882:22 --name hostsensor_running bibi21000/janitoo_hostsensor

Yous should now have 2 created containers :

.. code:: bash

    docker ps -a

.. code:: bash

    CONTAINER ID        IMAGE                          COMMAND             CREATED             STATUS      PORTS       NAMES
    888a3279e971        bibi21000/janitoo_hostsensor   "/root/auto.sh"     29 seconds ago      Created                 hostsensor_running
    02479e7eeea1        bibi21000/janitoo_hostsensor   "/bin/true"         42 seconds ago      Created                 hostsensor_store


Start the container
===================

Start it :

.. code:: bash

    docker start hostsensor_running

Check that is running :

.. code:: bash

    docker ps

.. code:: bash

    CONTAINER ID        IMAGE                          COMMAND             CREATED              STATUS          PORTS                  NAMES
    cc1a58b59f7c        bibi21000/janitoo_hostsensor   "/root/auto.sh"     About a minute ago   Up 8 seconds    0.0.0.0:8882->22/tcp   hostsensor_running

And stop it :

.. code:: bash

    docker stop hostsensor_running


You can also attach a started 'running' container to get a look at the top command:

.. code:: bash

    docker attach hostsensor_running

To detach use ctrl + p + ctrl + q


Update your installation
========================

Delete the 'running' container :

.. code:: bash

    docker rm hostsensor_running

Pull the image release :

.. code:: bash

    docker pull bibi21000/janitoo_hostsensor

And create a new 'running' container :

.. code:: bash

    docker create --volumes-from hostsensor_store -p 8882:22 --name hostsensor_running bibi21000/janitoo_hostsensor


Customize your installation
===========================

You can customize your docker image. This configuration is saved in the 'store' container.

SSH
---

Copy your key to the docker image to bypass the password :

.. code:: bash

    ssh-copy-id root@$127.0.0.1 -p 8882

Disable root login with password :

.. code:: bash

    sed -i -e "s/^#PermitRootLogin without-password/PermitRootLogin without-password/" /etc/ssh/sshd_config

Configuration
-------------

Update the hostsensor configuration file :

.. code:: bash

    ssh root@$127.0.0.1 -p 8882

Default password is janitoo. You can change it but it will be restored on the next running container update. Prefer the key solutions.

Open the configuration file. The docker image contains a nano or vim for editing files :

.. code:: bash

    root@8eafc45f6d09:~# vim /opt/janitoo/etc/janitoo_hostsensor.conf

You must at least update the broker ip. It should match the ip address of your shared "mosquitto" :

.. code:: bash

    broker_ip = 192.168.1.14

If you plan to install more than one janitoo_hostsensor image on your network, you must change the hadd of the bus and components :

.. code:: bash

    hadd = 0121/0000

to

.. code:: bash

    hadd = 0122/0000

And so on for 0121/0001, 0121/0002, ... Keep in mind that hadd must be unique on your network.

Save your updates and restart jnt_hostsensor :

.. code:: bash

    root@8eafc45f6d09:~# killall jnt_hostsensor

Disks
-----

The configuration is autogenerated on first startup (if empty). You can clean it but don't remove erverything ou remove the component from bus configuration.

.. code:: bash

    [hostsensor__disks]
    heartbeat = 60
    name = Disks
    location = Docker
    hadd = 0121/0002
    partition_config_0 = /root/.ssh
    total_config_0 = /root/.ssh
    used_config_0 = /root/.ssh
    free_config_0 = /root/.ssh
    percent_use_config_0 = /root/.ssh

Sensors
-------

Connect via ssh to the docker appliance and run the following command :

.. code:: bash

    root@11ec5283ffbd:~# sensors

It will detect the sensors :

.. code:: bash

    acpitz-virtual-0
    Adapter: Virtual device
    temp1:        +48.0 C  (crit = +105.0 C)

    fam15h_power-pci-00c4
    Adapter: PCI adapter
    power1:        0.00 W  (crit =  24.99 W)

    k10temp-pci-00c3
    Adapter: PCI adapter
    temp1:        +47.8 C  (high = +70.0 C)
                           (crit = +100.0 C, hyst = +99.0 C)

There is 2 temperature with the same name, update your sensor configuration http://www.lm-sensors.org/ if you want to monitor both.

Open the configuration file using your favorite editor :

.. code:: bash

    root@8eafc45f6d09:~# vim /opt/janitoo/etc/janitoo_hostsensor.conf

Add a component to the bus configuration :

.. code:: bash

    [hostsensor]
    ...
    components.lmsensor = hostsensor.lmsensor

Add a configuration for the component :

.. code:: bash

    [hostsensor__lmsensor]
    heartbeat = 20
    name = lm-sensors
    location = Docker
    hadd = 0121/0004
    temperature_config_0 = temp1

temperature_config_0 should be the name 'detected' in the steps below : temp1

Save and restart your server to apply.

Performances
============

The top result of the running applicance :

.. code:: bash

  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND
26650 root      20   0  342636  21668   4484 S   2,3  0,2   0:38.45 /usr/local/bin/python /usr/local/bin/jnt_hostsensor -c /etc/janitoo/janitoo_hostsensor.c+
